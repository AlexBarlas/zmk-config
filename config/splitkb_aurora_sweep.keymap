/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
   // flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
            &kp Q               &kp W               &kp F               &kp P               &kp B 	             &kp J              &kp L               &kp U               &kp Y               &kp SQT
            &mt LGUI A          &mt LALT R          &mt LSHFT S         &mt LCTRL T         &kp G 	             &kp M              &mt LCTRL N         &mt LSHFT E         &mt LALT I          &mt LGUI O
            &kp Z               &kp X               &kp C               &kp D               &kp V	             &kp K              &kp H               &kp COMMA           &kp DOT             &kp FSLH
                                                                        &mo 2               &kp LSFT             &kp SPC            &mo 1
            >;
        };

        lower_layer {
            bindings = <
            &kp EXCL            &kp AT              &kp HASH            &kp DLLR            &kp PRCNT           &kp KP_EQUAL        &kp 7               &kp 8               &kp 9               &kp KP_PLUS
            &kp SEMI            &kp COLON           &kp LBRC            &kp LPAR            &kp LBKT  	        &kp KP_ASTERISK     &kp 4               &kp 5               &kp 6               &kp KP_MINUS
            &bt CARET           &bt AMPS            &bt RBRC            &kp RPAR            &kp RBKT            &kp 0               &kp 1               &kp 2               &kp 3               &kp KP_DIVIDE
                                                                        &mo 3               &mo 4               &trans              &trans
            >;
        };

        raise_layer {
            bindings = <
            &kp ESC             &kp C_AC_BACK       &kp C_AC_FORWARD    &kp C_AL_CALC       &kp C_AL_EMAIL      &kp PG_UP           &kp HOME            &kp UP              &kp END             &kp CAPS
            &sk LALT            &sk LGUI            &sk LSHFT           &sk LCTRL           &sk RALT            &kp PG_DN           &kp LEFT            &kp DOWN            &kp RIGHT           &kp DEL
            &kp LS(LC(Z))       &kp LS(LC(X))       &kp LS(LC(C))       &kp LGUI            &kp LS(LC(V))       &kp PRINTSCREEN     &kp BKSP            &kp TAB             &kp K_CMENU         &kp ENTER
                                                                        &trans              &kp LGUI            &kp ENTER           &trans
            >;
        };

        function_layer {
            bindings = <
            &kp C_STOP          &kp C_PREV          &kp C_PLAY_PAUSE    &kp C_NEXT          &kp C_BRI_UP        &kp F12             &kp F7              &kp F8              &kp F9              &kp LC(PLUS)
            &sk LALT            &sk LGUI            &sk LSHFT           &sk LCTRL           &kp C_BRI_DN        &kp F11             &kp F4              &kp F5              &kp F6              &kp LC(MINUS)
            &kp C_MUTE          &kp C_VOL_DN        &kp LBKT            &kp C_VOL_UP        &kp BSLH            &kp F10             &kp F1              &kp F2              &kp F3              &kp LC(0)
                                                                        &trans              &trans              &trans              &trans
            >;
        };

        control_layer {
            bindings = <
            &bt BT_NXT          &bt BT_PRV          &kp C_PLAY_PAUSE    &kp C_NEXT          &kp C_BRI_UP        &kp F12             &kp F7              &kp F8              &kp F9              &kp LC(PLUS)
            &sk LALT            &sk LGUI            &sk LSHFT           &sk BACKSLASH       &kp C_BRI_DN        &kp F11             &kp F4              &kp F5              &kp F6              &kp LC(MINUS)
            &kp GRAVE           &kp C_VOL_DN        &kp LBKT            &kp C_VOL_UP        &kp BSLH            &kp F10             &kp F1              &kp F2              &kp F3              &kp LC(0)
                                                                        &trans              &trans              &trans              &trans
            >;
        };
    };
};
